// <auto-generated />
using System;
using Ecommerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Data.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20220520181744_UserComment")]
    partial class UserComment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ecommerce.Data.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "a7d4bfdd-7b62-48bd-8f84-142b52a1b5f5",
                            Name = "SysAdmin",
                            NormalizedName = "SYSADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "09c1c7d3-03d0-4c09-a306-74b12adbb06d",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "9e63c39f-6224-4b26-9ba5-9c092d439a25",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4d040826-902d-4a0c-8502-1d3a1d3da80a",
                            Email = "yunus@yunus.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "YUNUS@YUNUS.COM",
                            NormalizedUserName = "YUNUS",
                            PasswordHash = "AQAAAAEAACcQAAAAEDJ+SO90wp7h8BBv3JhnGZmuy/ai+JUhV0dgm20MbALPe+nP9jA8+NlzsnNXqjeA6g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5NBSKH6Z6VKWRPWHFEXTEPBJC7IULAKT",
                            TwoFactorEnabled = false,
                            UserName = "yunus"
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.AppUserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserComment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CommentId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CommentId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CommentId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CommentId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CommentId = 6,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            CommentId = 7,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            CommentId = 8,
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            CommentId = 9,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            CommentId = 10,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "Adidas"
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "LTB"
                        },
                        new
                        {
                            Id = 3,
                            BrandName = "Kinetix"
                        },
                        new
                        {
                            Id = 4,
                            BrandName = "Vodafone"
                        },
                        new
                        {
                            Id = 5,
                            BrandName = "Kacuv"
                        },
                        new
                        {
                            Id = 6,
                            BrandName = "Sirma"
                        },
                        new
                        {
                            Id = 7,
                            BrandName = "Efes"
                        },
                        new
                        {
                            Id = 8,
                            BrandName = "ABC"
                        },
                        new
                        {
                            Id = 9,
                            BrandName = "Fit"
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Clothes"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Legumes"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Technology"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Home/Life"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Frozen Food"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Watch"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Music"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Luxury"
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Shoe"
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorName = "Blue"
                        },
                        new
                        {
                            Id = 2,
                            ColorName = "Red"
                        },
                        new
                        {
                            Id = 3,
                            ColorName = "White"
                        },
                        new
                        {
                            Id = 4,
                            ColorName = "Black"
                        },
                        new
                        {
                            Id = 5,
                            ColorName = "Green"
                        },
                        new
                        {
                            Id = 6,
                            ColorName = "Orrange"
                        },
                        new
                        {
                            Id = 7,
                            ColorName = "Pink"
                        },
                        new
                        {
                            Id = 8,
                            ColorName = "Pruple"
                        },
                        new
                        {
                            Id = 9,
                            ColorName = "Brown"
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(1050)
                        .HasColumnType("nvarchar(1050)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comments = "simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry'",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comments = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi ornare, risus id dapibus tincidunt, elit purus tristique ",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Comments = "m, pharetra vel ipsum vel, interdum vehicula lectus. Maecenas id massa enim. Lorem ipsum dolor sit amet, consectetur a",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            Comments = "m, pharetra vel ipsum vel, interdum vehicula lectus. Maecenas id massa enim. Lorem ipsum dolor sit amet, conse",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            Comments = "m, pharetra vel ipsum vel, interdum vehicula lectus. Maecenas id massa enim. Lorem ipsum dolor sit amet, consectetur adipiscinn",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 6,
                            Comments = "nulla vulputate felis, et faucibus massa dolor nec nulla. Maecenas porta libero nisl, et facilisis lorem blandit vel. Mau",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 7,
                            Comments = "t ut ante id purus lobortis ullamcorper sit amet eu massa. Pellentesque orci nisl, dictum sed tempor ut, dignissim ac nibh. ",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 8,
                            Comments = "ula sed, faucibus ut ex. Pellentesque vestibulum lorem et ipsum euismod tincidunt. Phasellus accumsan consequat risus, eget ",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 9,
                            Comments = "sa viverra, sed facilisis diam elementum. Quisque nulla mauris, molestie nec convallis et, varius ac nibh. In hac habitasse plat",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 10,
                            Comments = "elit. Aliquam dapibus tristique i",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 11,
                            Comments = "nte tincidunt. Nullam maximus nisi turpis. Duis ipsum libero, aliquam quis nisi sagittis, tempor lacinia sapien. Maecenas gravi",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 12,
                            Comments = "nte tincidunt. Nullam maximus nisi turpis. Duis ipsum libero, aliquam quis nisi sagittis, tempor lacinia sapien. Maecenas gravid",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 13,
                            Comments = "nte tincidunt. Nullam maximus nisi turpis. Duis ipsum libero, aliquam quis nisi sagittis, tempor lacinia sapien. Maecenas grav",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 14,
                            Comments = "nte tincidunt. Nullam maximus nisi turpis. Duis ipsum libero, aliquam quis nisi sagittis, tempor lacinia sapien. Maecenas gravida neque vitae eros ",
                            ProductId = 9
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("FilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasMaxLength(150)
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ColorId");

                    b.HasIndex("SizeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 2,
                            CategoryId = 1,
                            ColorId = 1,
                            Price = 101,
                            ProductName = "NetCore",
                            SizeId = 2
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            CategoryId = 2,
                            ColorId = 4,
                            Price = 80,
                            ProductName = "Mvc",
                            SizeId = 1
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            CategoryId = 4,
                            ColorId = 3,
                            Price = 90,
                            ProductName = "Docker",
                            SizeId = 1
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 5,
                            CategoryId = 3,
                            ColorId = 2,
                            Price = 41,
                            ProductName = "Angular",
                            SizeId = 4
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 6,
                            CategoryId = 6,
                            ColorId = 7,
                            Price = 16,
                            ProductName = "Cache",
                            SizeId = 5
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 8,
                            CategoryId = 3,
                            ColorId = 8,
                            Price = 84,
                            ProductName = "React",
                            SizeId = 6
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 9,
                            CategoryId = 6,
                            ColorId = 9,
                            Price = 12,
                            ProductName = "Vue",
                            SizeId = 4
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 3,
                            CategoryId = 9,
                            ColorId = 3,
                            Price = 41,
                            ProductName = "Swagger",
                            SizeId = 8
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 2,
                            CategoryId = 8,
                            ColorId = 5,
                            Price = 34,
                            ProductName = "Redis",
                            SizeId = 9
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 6,
                            CategoryId = 4,
                            ColorId = 6,
                            Price = 12,
                            ProductName = "Ajax",
                            SizeId = 7
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 7,
                            CategoryId = 5,
                            ColorId = 1,
                            Price = 63,
                            ProductName = "Mongo",
                            SizeId = 6
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 1,
                            CategoryId = 7,
                            ColorId = 3,
                            Price = 71,
                            ProductName = "Postgre",
                            SizeId = 6
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 7,
                            CategoryId = 8,
                            ColorId = 1,
                            Price = 4,
                            ProductName = "Rest",
                            SizeId = 2
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 1,
                            CategoryId = 4,
                            ColorId = 5,
                            Price = 8,
                            ProductName = "Api",
                            SizeId = 4
                        });
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BodySize")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BodySize = "1"
                        },
                        new
                        {
                            Id = 2,
                            BodySize = "2"
                        },
                        new
                        {
                            Id = 3,
                            BodySize = "3"
                        },
                        new
                        {
                            Id = 4,
                            BodySize = "4"
                        },
                        new
                        {
                            Id = 5,
                            BodySize = "5"
                        },
                        new
                        {
                            Id = 6,
                            BodySize = "6"
                        },
                        new
                        {
                            Id = 7,
                            BodySize = "7"
                        },
                        new
                        {
                            Id = 8,
                            BodySize = "8"
                        },
                        new
                        {
                            Id = 9,
                            BodySize = "9"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.AppUserComment", b =>
                {
                    b.HasOne("Ecommerce.Data.Entities.Comment", "Comment")
                        .WithMany("Users")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Data.Entities.AppUser", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Comment", b =>
                {
                    b.HasOne("Ecommerce.Data.Entities.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Product", b =>
                {
                    b.HasOne("Ecommerce.Data.Entities.Brand", "Brands")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Data.Entities.Category", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Data.Entities.Color", "Colors")
                        .WithMany("Products")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Data.Entities.Size", "Sizes")
                        .WithMany("Products")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brands");

                    b.Navigation("Categories");

                    b.Navigation("Colors");

                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Ecommerce.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Ecommerce.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Ecommerce.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Ecommerce.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Ecommerce.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.AppUser", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Color", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Comment", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Product", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Ecommerce.Data.Entities.Size", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
